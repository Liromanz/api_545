name: Build and Deploy Django App

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Django/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          REPO_NAME: ${{ github.event.repository.name }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DEBUG: ${{ secrets.DEBUG }}
        run: |
          echo "Starting deployment to $SERVER_IP on port $SSH_PORT"
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key
          echo "Attempting SSH connection..."
          ssh -v -o StrictHostKeyChecking=no -i private_key -p $SSH_PORT liromanz@$SERVER_IP "
            echo 'Pulling Docker image...' &&
            docker pull $DOCKER_USERNAME/$REPO_NAME:latest &&
            echo 'Stopping existing container...' &&
            docker stop my-django-container || true &&
            echo 'Removing existing container...' &&
            docker rm my-django-container || true &&
            echo 'Starting new container...' &&
            docker run -d -p 54554:8000 --name my-django-container --restart always \
              -e DB_USER='$DB_USER' \
              -e DB_PASSWORD='$DB_PASSWORD' \
              -e DB_HOST='$DB_HOST' \
              -e DB_PORT='$DB_PORT' \
              -e DB_NAME='$DB_NAME' \
              -e SECRET_KEY='$SECRET_KEY' \
              -e DEBUG='$DEBUG' \
              $DOCKER_USERNAME/$REPO_NAME:latest &&
            echo 'Container started successfully'
          " || { echo 'Deployment failed'; exit 1; }
          echo "Deployment completed"
